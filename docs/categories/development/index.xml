<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on scribbling block</title>
    <link>http://wazatoki.github.io/categories/development/</link>
    <description>Recent content in development on scribbling block</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 10 Oct 2021 01:53:33 +0000</lastBuildDate><atom:link href="http://wazatoki.github.io/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python_dependency_management_tool</title>
      <link>http://wazatoki.github.io/docs/python_dependency_management_tool/</link>
      <pubDate>Sun, 10 Oct 2021 01:53:33 +0000</pubDate>
      
      <guid>http://wazatoki.github.io/docs/python_dependency_management_tool/</guid>
      <description>pipenv 新規プロジェクトでPipfileを元にして最新のモジュールをインストールしたい場合。 pipenv install 特定のモジュールをインストールしたい場合 pipenv install モジュール名称 既存のプロジェクトでモジュールを最新化したい場合 pipenv update 新規プロジェクトでPipfile.loc</description>
    </item>
    
    <item>
      <title>mat dialogから親コンポーネントにデータを送る</title>
      <link>http://wazatoki.github.io/docs/output_data_to_parent_from_angular_dialog/</link>
      <pubDate>Thu, 23 Sep 2021 16:37:35 +0900</pubDate>
      
      <guid>http://wazatoki.github.io/docs/output_data_to_parent_from_angular_dialog/</guid>
      <description>ダイアログを閉じたときにデータを送る ダイアログコンポーネント close() { this.dialogRef.close(data); } constructor( public dialogRef: MatDialogRef&amp;lt;MyDialogComponent&amp;gt;, @Inject(MAT_DIALOG_DATA) public data: DialogData ) { } 親コンポーネント openDialog() { this.dialogRef = this.myDialog.open(MyDialogComponent, { data: {} }); this.dialogRef.afterClosed().subscribe( data =&amp;gt; console.log(&amp;quot;Dialog output:&amp;quot;, data) ); } constructor( private myDialog: MatDialog, ) { } ダイアログを閉じないでデータを送る ダイアログコンポーネント @Output() submitClicked = new EventEmitter&amp;lt;any&amp;gt;(); sendMessageToParent() { const data = &#39;Your data&#39;; this.submitClicked.emit(data); }</description>
    </item>
    
  </channel>
</rss>
